@model WebOptimus.Models.ViewModel.RequestAccountDetailsViewModel
@using WebOptimus.StaticVariables
@{
    ViewData["Title"] = "Request Account";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12">
                <h2 class="m-0">Request to separate <strong>@Model.DependentName</strong> from <strong>@Model.CurrentAccountHolderName</strong> (current account holder)</h2>
            </div>
        </div>
    </div>
</div>

<h5>Below are related family member(s). You can choose to select other dependents so that <strong>@Model.DependentName</strong> can manage them under their new account, or simply do not check any and proceed to create a new account just for <strong> @Model.DependentName</strong> .</h5>

<h3 class="text-danger">Proceeding to separate accounts is irreversible, so please consider it carefully before proceeding further.</h3>
@if (TempData[SD.Error] != null)
{
    <div class="alert alert-danger">
        @TempData[SD.Error]
    </div>
}

@if (TempData[SD.Success] != null)
{
    <div class="alert alert-success">
        @TempData[SD.Success]
    </div>
}

@if (Model.Dependents != null && Model.Dependents.Any())
{
    <form id="separateForm" method="post" asp-action="SeparateDependent">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="DependentId" />
        <input type="hidden" asp-for="UserId" />

        <table class="table table-bordered" id="dependentsTable" style="width: 100%">
            <thead>
                <tr>
                    <th>Select</th>
                    <th>Dependent Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var dependent in Model.Dependents)
                {
                    <tr>
                        <td>
                            <input type="checkbox" asp-for="@dependent.IsSelected" />
                        </td>
                        <td>@dependent.PersonName</td>
                    </tr>
                }
            </tbody>
        </table>

        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#confirmationModal">Separate and Create New Account</button>
        <a asp-action="ManageDependents" class="btn btn-secondary">Go Back</a>
    </form>
}
else
{
    <p>No relatives to display.</p>
}

<!-- Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-action="SeparateDependent" asp-controller="Family">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="DependentId" />
                <input type="hidden" asp-for="UserId" />
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Create New Account for @Model.DependentName</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="dependentEmail"> @Model.DependentName's  Email address</label>
                        <input type="email" class="form-control" id="dependentEmail" name="Email" value="@Model.Email" required placeholder="Email Address"/>
                    </div>
                    <div class="form-group">
                        <label for="temporaryPassword">Temporary Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="temporaryPassword" name="TemporaryPassword" required placeholder="Password" />
                            <div class="input-group-append">
                                <span class="input-group-text" onclick="togglePasswordVisibility()">
                                    <i class="fas fa-eye" id="togglePasswordIcon"></i>
                                </span>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success" onclick="return confirm('Are you sure you want to submit?')">Submit</button>

                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#dependentsTable').DataTable();
        });
    </script>

    <script>
        function togglePasswordVisibility() {
            var passwordField = document.getElementById("temporaryPassword");
            var toggleIcon = document.getElementById("togglePasswordIcon");

            if (passwordField.type === "password") {
                passwordField.type = "text";
                toggleIcon.classList.remove("fa-eye");
                toggleIcon.classList.add("fa-eye-slash");
            } else {
                passwordField.type = "password";
                toggleIcon.classList.remove("fa-eye-slash");
                toggleIcon.classList.add("fa-eye");
            }
        }
    </script>


}
